name: Deploy Streamlit + Bedrock App to EC2 via ECR

on:
  push:
    branches: [main]

env:
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy Docker Image to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Verify AWS Credentials and ECR Repository
        run: |
          echo "Verifying AWS credentials..."
          aws sts get-caller-identity
          echo "Verifying that ECR repository '${{ secrets.ECR_REPO }}' exists..."
          aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPO }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        run: |
          IMAGE_URI=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "Built image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          # Capture the full image URI as an output for later use
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Verify EC2 Configuration
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "Error: EC2_HOST is not set!"
            exit 1
          else
            echo "EC2_HOST is set."
          fi

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 10m
          script: |
            # Retrieve the image URI from the build step's output
            IMAGE_URI="${{ steps.build.outputs.image_uri }}"
            echo "Deploying image: $IMAGE_URI"
            # Extract the ECR registry (the part before the first '/')
            REGISTRY=$(echo $IMAGE_URI | cut -d '/' -f 1)
            echo "Logging into ECR registry: $REGISTRY"
            aws ecr get-login-password --region "${{ secrets.AWS_DEFAULT_REGION }}" | docker login --username AWS --password-stdin $REGISTRY
            docker stop streamlit-app || true
            docker rm streamlit-app || true
            docker pull $IMAGE_URI
            docker run -d \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
              -p 8501:8501 \
              --name streamlit-app \
              $IMAGE_URI
